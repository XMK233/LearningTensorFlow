node {
  name: "x-input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 784
        }
      }
    }
  }
}
node {
  name: "y-input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 10
        }
      }
    }
  }
}
node {
  name: "layer1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 784
          }
          dim {
            size: 500
          }
        }
        tensor_content: "_\320\203\275p\020\31187r3\275\001!\244\275\007\256\237\274\216\243\213\275Z\227-\275\236\371\"\275\262\254\300;\251\276\013=\311\035\016\274N\034\375\274\322[I\275\232x5\273}\370\245\275\372\336U;\262\277\243\275.\360\277\274\336\277\376\272\316`,<\225\010q\275\006n\221\274-|\013\274\321M\363\275\317T\205\276v*\027\275\234\243\242\274%Ge\275\371\226J\275t[\375\274\200\366\2069\324\310\"\275>S\217\275\377u\307\274\356{g\275\314\272|\275T\302o\275+-\227<\274\274\211;\022\225\025\275\334t\227\274a\030\301\274\332w\002\276\341g*\275\316\260$\276\340\244\332\275os\223\275\010\3366=Z\231\017\275T\243\303\272\027.\306\275z\305\r\276\201X_\275\355y}\274\367\222\232\275}\021n\275/\316\232\274Z{\221\274O\010\323\274}\243\023\275\240\330`<\245\250\237\275\033\252\216\274\270\2746\273\310\342\023\275#\304\352<\023\005\t\275\0169\360\275HZ\003\276\361\352\016\276\352\257\357:`\243E\276\211\025\303<\252\345F\275J\265\274\273\251\327\216\275d>n\273O<\316:\r\014\314\273O\237\n\273;-\202\273\253\001\257\275\346|><\3769\242\274\322G\025<Z\217\006\275\023\226>=}A\304\275\205\331\227\274\246J)\274\346/\222\274\036u\323<L\357\367\274\254\257\310\275d\200\017:\264\267d\275Yj\035=\361k@\275<~\027\275b?\266\272*\305\225\274]:r<\350({\274t\t+\274)\346s\274\205\245i\275\220\341\r\270\302\263\320\274\361$4<5\326s\275\004\300b\2747y;\275\026\252\277<7\363\261\272\222o\004\275\200\001#\274\213\273\203\274?FF\274\301\025\213<\224\357\342\275=\216&\273\257\201*<\235+\235\275\203\370\020\274a\347 :\020\371\r\275\266\245\370\274{j\305\275\233u\005\274\007-\340\274\2303\204\274\2313\212<;U\022=/\273\'\273\t&\253\275\2152\"\274\244@Z\274\356\255.\274O\257\252<\352T\022\275\007\367\024\275\252C\203\275\320\376\025<\207\371\031\275\347#n\275\310\361@=q\337c<\227\237\325<\223\333{\275ih\375<A\363.\275s\234\307\274\254eL\275\237\235i\275H\335(\275\nk\247<}Pw\275zn\034;\320\276\242:\254\021=\2757\327\251<\204\322\307< [\345<\272\374O\275\201\260E\275\236.p\274\273\206o\274_\253C\275K)R=j\336\307\275l\240,\273f\277x\274L\203Y\275U\227\305\274\246o\201\274CH3\2758P\275<\0368Z\275[\376J<#H/\275|s;;\014\024\217\272\241\246\010\276r\366;=\014)v\274\375\351\204\275A\243\177<\322V\257\275d\020\006\275?Bu\275!!\250\274~\361\343\273\336`\243\274\000!\021\274N\375\323<\357\312\305\275)\352\221\275\242ZD\275=/(<;\250\222\274\365\037\"\276\274H\035;\346\206\214\275\303\233\321\274\242\333\021\2759C\312\271\004o\325\274\361I\375\273\304\274k=\233\010\027;\331\315\307\275\022|<\275\256\260\351\271\261V)<M\324\233\2750\031\342<;dF\274\\\267C\275Q\241\023\275R\354\235\275Pi.\274\261zx\275\007\267\263\274\0028&\275\007b\276\274\006\017K\275S\360t<m\374\n\275\353]!\275j\010\265<\335\327\313\273\322:\214\274\312Jj\274\250\243O<\032T\t\275\276d\300\275\370\322O\274\026O\000=\330Iq\2756\'l\274\337m\003\274\310@\311\274~\345\326<DTY\275+/\355\275\016@X=_G9<$\242r\275\334\221\352\274\311n\371\275\225w>\275<\3716\275^\373\232;p\204\212\273\244k2=\21687\276y\350\327\274`\010\271<\262:\315\275\352\253\202\274>\177\027\2739ud\275z\010\227\274\364\371\254\274`+\221\273\344/\023<g\247\'\275\367\330\360\274\202\277\237\275\003t\177<\346\350\2549\272\263d\275\246\377@\275>\327\236\275`kY\2753S<\275\014z\304\273\n\n\023\275\374\025\023\275\255\250\334\275LAe\275v\362j\275\016\366\226;\250\217w=^\206\374:\034\\%\274l\030-\276(\345\014\275\017\365\t\275G\257\206\275\330\341<\275\316\351\260;\255jo\273\321x\'\276\212\351T\275\250w\370\275\316\324\336;x\200\003<-\331\000=\260\261\241\275\362\221\331<\241|\321\275,\023\030\275\211\204\217\274\006\222A\274\373o\017=t\210\222\274w\203\363\275\033\003\327<\253\242\002\275`j\033<(\340\211\273VP\t\274^\3251\275\345\313\004\276(\362\321;\225\320\022\274\021\225\007\275\270\321\200\274\'\032!<\237\363\316\275\330\027\322\272\177^\204<\254\343\355\275\225{;\275-\315\265\274\321\035\204<\236-=\274\250\366M\275\20485=C+\004<\246g\\\2741\224\360<l\255\240;\004$\245\275\314\240\213\273\220\307\030\274M\235\225\2743\034\341\275\237\353\222\275}kK<\017\220\036\275\355V\262\275\027y\334<\352\255\004\276\210{\266\274hU\013\275+\361\032\2749eG\275\\\304t\2745\206\216\274\344\364\";\215=n\275\325\024\030\276\352\243\204\274\320\364\253;\356\230\250\275c\323\371\275\2518\334\275b\257\006\273\222\325:\275\317\312\212\275L\255S\275\276\013\301<\276\263\323\274\341Y\214\275-j\247\275\200@\232<\333\332\260;\355 \002\276\310\034Y\275\036\371\232=\323\213\240\272\336\330\216\274\253\326V\2731\323j\274\002\221\020\276M\316S\275\220\256J\275\212\r\201\275qY\316;\315\241\031\276\277\364n\275:\303\237\274\321\000\315;\307I\030\275\357x\003\275NS\203\272\020\203A\275\013a/\275\244\2322<=hT\275d[\204\275\273\024\306\273\321)o\275\307x\320;g\261\332\275\214\201\r=\360\211G\274{E<\275rnP;\220!\367\272\220\267\300\274\266\002Z\276\257hP<^\251\014\276\031;\226<f)\250\273\322\212\030<\241E\330\274\032\'O\275\226\317\345\275\374p\347<\366Q\351\275(\304\005\274\353\230O\275\r\177\216\274\276\245\025\275\371hY=\033\275\350\275\r\262:;\234E\244\275\350\035D\272\350\'p\275\222\207^\275\367\272\365;\305\260S\274#v^\275D ~\272)\216\243\275.\342\214\274d\226\310\275\317\363s\274\232\306\022\275\2708V<\326[\034\275\023\214\302<\334\313\324\275\335,\317<\332H\030\275l\205\311\274u\343\036\276\211H\022\274D\023\205\273Ur:\273\227\265\316\274\214\274\265;\242\3366\275\243\274\305<u\337J\274\212\321\230\275i\010\375\274o\362&\275\252\221q\275\332\255\177\274V\375\244\275\210la\275\237\337<\275\213dH=v\005\001\275\233g\211\275\2237\235<\024\035\352\274s\240\346\275\276\207M\275\330\237\020\271\357\rE\272\000\020b<\031aS\273\261q\336<\200\027|;\217\224m\27589\321;\312\374\243\275\355y\036\275c\341\341\275\344j\356\274Fo\340;\227ri\276\347\244p\274s\213\265;\265\211\\;\32302\275\256m\260\275\266\203\235;\034)\226\274`\354W<\256\223,\273\322(\024\275c\336G\2743\377\013;::\330\274 \n\224:\237\217x\275\227C\370\274\302\037-\275\355A\267\274\345\341\200\274\320#.=\326\260\372\273"
      }
    }
  }
}
node {
  name: "layer1/weights/read"
  op: "Identity"
  input: "layer1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer1/weights"
      }
    }
  }
}
node {
  name: "layer1/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "layer1/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "layer1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "layer1/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 500
          }
        }
        tensor_content: "_\320\203\275p\020\31187r3\275\001!\244\275\007\256\237\274\216\243\213\275Z\227-\275\236\371\"\275\262\254\300;\251\276\013=\311\035\016\274N\034\375\274\322[I\275\232x5\273}\370\245\275\372\336U;\262\277\243\275.\360\277\274\336\277\376\272\316`,<\225\010q\275\006n\221\274-|\013\274\321M\363\275\317T\205\276v*\027\275\234\243\242\274%Ge\275\371\226J\275t[\375\274\200\366\2069\324\310\"\275>S\217\275\377u\307\274\356{g\275\314\272|\275T\302o\275+-\227<\274\274\211;\022\225\025\275\334t\227\274a\030\301\274\332w\002\276\341g*\275\316\260$\276\340\244\332\275os\223\275\010\3366=Z\231\017\275T\243\303\272\027.\306\275z\305\r\276\201X_\275\355y}\274\367\222\232\275}\021n\275/\316\232\274Z{\221\274O\010\323\274}\243\023\275\240\330`<\245\250\237\275\033\252\216\274\270\2746\273\310\342\023\275#\304\352<\023\005\t\275\0169\360\275HZ\003\276\361\352\016\276\352\257\357:`\243E\276\211\025\303<\252\345F\275J\265\274\273\251\327\216\275d>n\273O<\316:\r\014\314\273O\237\n\273;-\202\273\253\001\257\275\346|><\3769\242\274\322G\025<Z\217\006\275\023\226>=}A\304\275\205\331\227\274\246J)\274\346/\222\274\036u\323<L\357\367\274\254\257\310\275d\200\017:\264\267d\275Yj\035=\361k@\275<~\027\275b?\266\272*\305\225\274]:r<\350({\274t\t+\274)\346s\274\205\245i\275\220\341\r\270\302\263\320\274\361$4<5\326s\275\004\300b\2747y;\275\026\252\277<7\363\261\272\222o\004\275\200\001#\274\213\273\203\274?FF\274\301\025\213<\224\357\342\275=\216&\273\257\201*<\235+\235\275\203\370\020\274a\347 :\020\371\r\275\266\245\370\274{j\305\275\233u\005\274\007-\340\274\2303\204\274\2313\212<;U\022=/\273\'\273\t&\253\275\2152\"\274\244@Z\274\356\255.\274O\257\252<\352T\022\275\007\367\024\275\252C\203\275\320\376\025<\207\371\031\275\347#n\275\310\361@=q\337c<\227\237\325<\223\333{\275ih\375<A\363.\275s\234\307\274\254eL\275\237\235i\275H\335(\275\nk\247<}Pw\275zn\034;\320\276\242:\254\021=\2757\327\251<\204\322\307< [\345<\272\374O\275\201\260E\275\236.p\274\273\206o\274_\253C\275K)R=j\336\307\275l\240,\273f\277x\274L\203Y\275U\227\305\274\246o\201\274CH3\2758P\275<\0368Z\275[\376J<#H/\275|s;;\014\024\217\272\241\246\010\276r\366;=\014)v\274\375\351\204\275A\243\177<\322V\257\275d\020\006\275?Bu\275!!\250\274~\361\343\273\336`\243\274\000!\021\274N\375\323<\357\312\305\275)\352\221\275\242ZD\275=/(<;\250\222\274\365\037\"\276\274H\035;\346\206\214\275\303\233\321\274\242\333\021\2759C\312\271\004o\325\274\361I\375\273\304\274k=\233\010\027;\331\315\307\275\022|<\275\256\260\351\271\261V)<M\324\233\2750\031\342<;dF\274\\\267C\275Q\241\023\275R\354\235\275Pi.\274\261zx\275\007\267\263\274\0028&\275\007b\276\274\006\017K\275S\360t<m\374\n\275\353]!\275j\010\265<\335\327\313\273\322:\214\274\312Jj\274\250\243O<\032T\t\275\276d\300\275\370\322O\274\026O\000=\330Iq\2756\'l\274\337m\003\274\310@\311\274~\345\326<DTY\275+/\355\275\016@X=_G9<$\242r\275\334\221\352\274\311n\371\275\225w>\275<\3716\275^\373\232;p\204\212\273\244k2=\21687\276y\350\327\274`\010\271<\262:\315\275\352\253\202\274>\177\027\2739ud\275z\010\227\274\364\371\254\274`+\221\273\344/\023<g\247\'\275\367\330\360\274\202\277\237\275\003t\177<\346\350\2549\272\263d\275\246\377@\275>\327\236\275`kY\2753S<\275\014z\304\273\n\n\023\275\374\025\023\275\255\250\334\275LAe\275v\362j\275\016\366\226;\250\217w=^\206\374:\034\\%\274l\030-\276(\345\014\275\017\365\t\275G\257\206\275\330\341<\275\316\351\260;\255jo\273\321x\'\276\212\351T\275\250w\370\275\316\324\336;x\200\003<-\331\000=\260\261\241\275\362\221\331<\241|\321\275,\023\030\275\211\204\217\274\006\222A\274\373o\017=t\210\222\274w\203\363\275\033\003\327<\253\242\002\275`j\033<(\340\211\273VP\t\274^\3251\275\345\313\004\276(\362\321;\225\320\022\274\021\225\007\275\270\321\200\274\'\032!<\237\363\316\275\330\027\322\272\177^\204<\254\343\355\275\225{;\275-\315\265\274\321\035\204<\236-=\274\250\366M\275\20485=C+\004<\246g\\\2741\224\360<l\255\240;\004$\245\275\314\240\213\273\220\307\030\274M\235\225\2743\034\341\275\237\353\222\275}kK<\017\220\036\275\355V\262\275\027y\334<\352\255\004\276\210{\266\274hU\013\275+\361\032\2749eG\275\\\304t\2745\206\216\274\344\364\";\215=n\275\325\024\030\276\352\243\204\274\320\364\253;\356\230\250\275c\323\371\275\2518\334\275b\257\006\273\222\325:\275\317\312\212\275L\255S\275\276\013\301<\276\263\323\274\341Y\214\275-j\247\275\200@\232<\333\332\260;\355 \002\276\310\034Y\275\036\371\232=\323\213\240\272\336\330\216\274\253\326V\2731\323j\274\002\221\020\276M\316S\275\220\256J\275\212\r\201\275qY\316;\315\241\031\276\277\364n\275:\303\237\274\321\000\315;\307I\030\275\357x\003\275NS\203\272\020\203A\275\013a/\275\244\2322<=hT\275d[\204\275\273\024\306\273\321)o\275\307x\320;g\261\332\275\214\201\r=\360\211G\274{E<\275rnP;\220!\367\272\220\267\300\274\266\002Z\276\257hP<^\251\014\276\031;\226<f)\250\273\322\212\030<\241E\330\274\032\'O\275\226\317\345\275\374p\347<\366Q\351\275(\304\005\274\353\230O\275\r\177\216\274\276\245\025\275\371hY=\033\275\350\275\r\262:;\234E\244\275\350\035D\272\350\'p\275\222\207^\275\367\272\365;\305\260S\274#v^\275D ~\272)\216\243\275.\342\214\274d\226\310\275\317\363s\274\232\306\022\275\2708V<\326[\034\275\023\214\302<\334\313\324\275\335,\317<\332H\030\275l\205\311\274u\343\036\276\211H\022\274D\023\205\273Ur:\273\227\265\316\274\214\274\265;\242\3366\275\243\274\305<u\337J\274\212\321\230\275i\010\375\274o\362&\275\252\221q\275\332\255\177\274V\375\244\275\210la\275\237\337<\275\213dH=v\005\001\275\233g\211\275\2237\235<\024\035\352\274s\240\346\275\276\207M\275\330\237\020\271\357\rE\272\000\020b<\031aS\273\261q\336<\200\027|;\217\224m\27589\321;\312\374\243\275\355y\036\275c\341\341\275\344j\356\274Fo\340;\227ri\276\347\244p\274s\213\265;\265\211\\;\32302\275\256m\260\275\266\203\235;\034)\226\274`\354W<\256\223,\273\322(\024\275c\336G\2743\377\013;::\330\274 \n\224:\237\217x\275\227C\370\274\302\037-\275\355A\267\274\345\341\200\274\320#.=\326\260\372\273"
      }
    }
  }
}
node {
  name: "layer1/biases/read"
  op: "Identity"
  input: "layer1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer1/biases"
      }
    }
  }
}
node {
  name: "layer1/MatMul"
  op: "MatMul"
  input: "x-input"
  input: "layer1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "layer1/add"
  op: "Add"
  input: "layer1/MatMul"
  input: "layer1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "layer1/Relu"
  op: "Relu"
  input: "layer1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "layer2/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 500
          }
          dim {
            size: 10
          }
        }
        tensor_content: "\363\376\244\276\357=\r>\205x_=dB\013=\261\367>=\207\022\225<\002\323^<\177\374\020=|\357\\>\226[j>\354\035*=dW\344\275\337\376\245=\246)=>\373J\325\275p\363^=3\206=\275U\302\311=\244\360\005\275K\021e=p\036Q\276\272T-\276C\343]<;\331\244\275{g\036>\227\257\367\274\247\262\270=\2054.\274T\244h<\033(E=>\253\030\276m\347\267\273.\"Q\275G\023\"\276\314\007\272=\213|z\274\217m\341=\300j\261=fg\017>p\004>>\"\252-\276\365_E>\334\330\024>R\206\">\347D\266\275\004\355\322=\265\314\242\275\221\273\321\274\232\301\034\276\247\302\342\275]\2212\277]\200?=\357L\n>\343\252\177=\371\302Y>\312\311F>\312\022\351;hX^=N\310\206>@\310\340>\220\237\332\2748\023\301\275\350\027\371=\254\021\230\275<3\332=`4\260<\010\360[\276\230i\241=\323n\177>cq\241\276\373\212\255\2746A_\2755\230o<\236:\024\275\270DL94\301*\275\245\016\013\276\2338\365=1\263\251=\364\333\236\275\323\273\263=z\313`<\302U\317\2750M\027\276\361=\327\2750\255\262\275\235\304\373\273\036\360\347\274X\235\312\273\2117b\275~\320D>1\346\235\275\230D\374<]K\310=\357\232b\275 g\244=P3\025\275\306\377\020\276*-Y\276I\277A\276\361\264\013\275\006\265@<Y\265\257=\245\266\013=\303\335\013>K\353\231>\376\014+<z\023\262=\213\'\343=\237%Q\276\036\360=\275\304\335\246\275 T\033=\033\316\264\275\037\352\215=\312\227!>\373\027\001>G&S=\222\245\002=m\215\354\274\2226O\276\177\220O\275\325gu\2757\375\357\275F\022q\274\017\314\350\274\360\323H<X\006\312<\3135\367=\252y\301\273\301\373\332\275\364\215\'>5\276\357\275{\260c\276\244O\337\2753\252\203=\366!\177=\232L\245<B\214\372=C=o\275\276jO\276\331\237\242>HJ\276=qJ\033>\301\224=>WO<=Sr\247=\224`\203>\226h$>\354g\017\277\304\250\246=\274\010\301=@\317\217\275\336\355\000\276\265\315\255\275\\\233R\275r\370\312\275\274\350\247\275\337\023g=\2246q\274\330}^\276\036\327\374:\364gT=\t\022\205=\257\224\317=5h\006>\272\305\016\275\362\367\021<\350\266\020\276r\217\017\276\333\254\\<2{\306\275\317gC=u\347\314=t9\025=\371\3763=\033\227i\275\314\214\005\276\315\316\235\275[\230\274=\301f\201\2753l%\276\252\225\222\274\266<B>\032\030\032\276\322\003\004>\350\376\345\272\371\362\312=~-m\275\330\246\016;58 >\305\013\034\276f\203\212\275\2465\364<\205\374\230\2744\215\000>{\255\310<-\2374=#M\021>\356\344A=\007\022\321\275\267t\340=\355\230\210\2750za=\275\344\202>:\nw>e\206\003\276\267\265;=0\025k>*\302D\2773\333p<\220^\250\275\356\177\226=\200\310]<\265\272\350=\330\231\203=e\202\321\275=1\326=\226\254\014>\253%\250=\013\200\302\275\226\226==a\233\375\275v[|\275\247\206n\2747@\211\275\000K\306\275\253\220\367\275\333\212\032\276\253\235Z\2752\212&\276\016m<=\355rJ\274\241\216(<\226b\232>C\276A=\212r\307>\376\331\200<\017\261\340=\014Yj\276\340`A\276\354\320_>\232/\031>T.E>e\177\231>\353\213\370=\325Te>\357u\252>P7\010>\253\315\304\277\230\363H\276\336\337\233\275\211\331\227=\216VW=\216\356\245=\344\365\352\274G3\273\275u\3050>P\364\371\275\330)\016:Xa\224<\257\217\020=r\320\210\274-a\016>\\\254\r\275\\ev\275\214X(>(\3559\276\"\200\232\275%\250]=m\320e\276Yg\203<8\342\211=\360\\\225=\357\231&>\030\345R\275!Ev\275\350?\216\274\364 \204\275\030Wp>9\203\017\276\204(\361<\200\262\324\275\026(\260=\"\301\031>\n\243\326<\226H\352<\033*\365=X\250\301;\311\357\r=\275\267\332=W{\317=\240\307\220\275\005\276\324=\324\"*>\206l\363<\304\'#\275Gs\223\275a\023^>\177X\217\275\266 \217<\226\205\345\275\200N\275=r\363#\274\033\233\304\275\t\364T>y\243\253<8\257\033>m\354\366=\270\021\025\276p\354\215\276\025\347\000\275\3230M\274\177\332\210=\235\255!=\204\262\265\274F\320\002=\242z\033\276< \030\275\266\270\016\276;\r\264\276h\201 >\240{\021\274\367  =\034d\265=\272\253(\274\251\030\331\275M\275\323\275\030\233k>\013z\321\2750D1\276\252\276U=\tm\307\275\347$4=\361\322\033=K\252\222\275\246\302\034\276\354\217\014\276\002{\030<A,#=\374u\332\276\352%\234>\003C\213>\212\340\206>\3014\217>\373\026\266>\321r\244<\345\207\010>b\276;;\225\235r\277~`?\2761\341\342\274\010\310\301>\372\340\026\275\241\370\020\275978\276\314p\306=\010v\221>\216F\r\276gw\330\276\346]\227\276d\220\260\275\t\010\3668\007\216\246\274d\020\241=\300d\275\274g\347\222=\252\244\271\275\0032T>\311\364h=\031\270\336=lx\030<\034M\204=\274\310\314=\266V\001<\233\373Z\275D\225s>\n\354\376\274j_\334\275\350\r\303\275\177\353\345\275\212\025u\275\224y\255=\'\362\274<N\240\005=_\355Y=\004\367U\275J\346\332\275\031?\253\275\213\216\036\276\356\336\256\275\263H\260>\270\316\226\2745\032R>pV,>\000pj>\0025\033=\342oH>\032\342\013>\263\030A\277\224-\204=\334\377\017\275\n\017\246\275Xe,\275C>\324\275\344\237/\276\213a\024\275\"\006\002>j\276\207\272\2522\006>9\034\306\275\371\243\360=D\252)>\341n{:4\005\347=!\304\225=V\236\261\275\010\267\'\274\250t\334=\025W\034\274\216>\274\276\027\204\216=\\p\\>\332\343\276=K`\260>\360\341\006>\323\264\016>=S\002>U\252\020>\210\313\227\276<\327\205\276F\304w>\200\212\223>,\305\367\275\222\337`>\354S\022\276g\241\253\275\322\327\276\2747\014w\275\021Vk=\020C\247\276M\200O>r\371h>j\301\261>\221\212\352=\260\350\000>}\n\262>\227\203\267>,\351\177\275\261\276\266\277\351\361\235\276\"9\226\275!(\276=\345\027\374=\002\345W>\270n\217>\224\211r=\225\013N>/\267\016=vH\n\277\022\027\277\275\305\273\244<\325\300m=lm\247<\020B[=w\234[\274\301n\225=\203\347+=\363m`=\356\360A>\337\262\262=Z\\\267\275\032\353\026\275\240\357\374=\332\303a\276\375\021\221\274\260\023}\276\n\270\327>v\0339\276\350\377\320\275?9\324\275\202\377I\276{Q\007>\373\363U>\306\262_>t}\n>}\300\315\275x u\276\207\3173>U<\332<\306W\264\276p\246\205=\020_\376\275\315NB\274e\344\350>\370u0>\336t)\276\0016\263\275\252\334\021>\200|\361\276\037\036\344\275\275\356\266\275\221\346A>\341\244\326\275\350dN>cfK\276\314K\344\274\265o&\276,\016\274>\366h\206\276\320$\346\276\222YE=\301}\004>;\004\231=\254g\235=,.\205<\241)\033\275G\020\224>\347\233\254=\035\350:\277\220\263;=\321\250C\275\376\267\010>u\267\031<\373L\322<L\353%=\233_;\275P!,=\307\221G>+(Z\275\316 \223=\254}\354=\274\276\354= \354\226\275rj\254\275\017\266\324\275\364\266\014>\323V\304;|4\364\275\204]\031\276\347}\301\275D\256\250\273#LJ\275\001\323\351\275\247\371\235\273<S\014\276\245\013\t<\323\303\242=n\335e=W\232\001\274\000b\211\276\3667U>\'\352u>a\302\246=0\307\220=\032\225\026=\017n\215:\t^\003\275}\250j>\357\200\t>^\275c\276\262\200\221\275X,\013\275\245\232\364\275\202\235B>\215i\226\275\357\005\306\275\354\357\013>\323\344b\275;\272\245=k\303\241\2757O\306\275\366\210\231\275\215\326P>b%3\276\376\"\205\275\263\324\342\275\350\257f=Z_\301\275\222]1<O6\003>&\235q\273\233O\010\274\'\214\211=|u\242=\335\272\034>r\014\363=\307\213U;\317\245)>t\007\001<,\232\036\276\370\005-\276\320\341g>\004\275\303\275L\344\322=g\2647\274\331A,>\324\246\202<]\307\032>\016J\221\275\177\"H=\307Q\020\276\\\251\246\275\234\t]=\223\330\221=\276\362\230=_)\n;\237{\005\276\232\017t\276E\204\266<\276\242\245\275EV\222>\373\374+>]\357#>\214\204\222>\302\206g>\031\004\034>\337\335\002?O<\244\275\374\346\215\277\027\005\214\275\355L\210>\207\326\254\275m\024\237\275^\003\247\275H\014\221=W\315\363<\021\233\215=Bg\220=.Z\032\276p\021\221=\342\004\245\2754\001\200\275\206\332+>\342$\357=\025L\024\275\205\232\267=T(\\>+\367\246\275O\264\014\276\372\302\232\275}9\276<\253\024\276\274V\342s=\201\374\014=\203H\266<\326\204<=&\345\363\275\305;\033\276U\246\013=\313G-=\345\264\243\274\354Bu<@2Y=\272\260\002>\2629Q>\242*\250=D=h>\341}i\275\215\2725\274\325I\037\276C\001\005\276d\3364\275-\004\271>y\337W\275\216Q\232>\244x-\274)\250\307=\305\273\210\276&\220w\276D\001/\276\361t\013\276\240\036\367\275\3715\021?2o\001\276\035\212\252\274\236C\331\276\260$\237\276W\275\222>\301(:>\003\320\326\276\275\351\227=\333\005\301\274\316^\372\273\032|\242=\227x\023>f$\020\276\000\220E<\337a2>\250\335,>K\233\006\2772\213\021<\337\027\202=\313\236\031=V<!>\327\335\301\273\255g\">N|\222\275\341T\261=\207HQ>x%\253\274\026\216h>/\326\232\275]\034\302\275\300\030\261<z{\014=\016\227\030\276\322\205\317<\326\030\032\276\r\310\327\275\366>\316\275\216\306\367\275\026\246I\275\346\264\021\276\310\334H>_\224\334=\246/\354;2\275\027?\253\336\226<\373#\347\276pB\310\273sg?>X\257!\275\253\336\317\275\245\005\010\276uG\315<<\304\237\274b\321\370=u\312\014\275\372\261@=\017\322\220\275\277U5=\323+\034\276x\027\r\276\271\270\035>\330\233\257\2732\216\033=iw\234\274\003<\320:,\2022>\327\314\325\275\372\020\005>d(@<F\227\n<l\032\320\275T\210\275\273&\251\313\273\002\032A<`\332\371=\354&\202\275\364\245\357\275\034B\232\275\200\000\225=i\375\313\275\375v\314={\315\361=) \223<2\221\023>j\007\306\274\235\031\222=\025\310\371;\215\246&=^\'\257\275\330\244\020\275\026\330\275\275\346\030\022>\330\021\007\276C&|\275\307\374F\275\231\317#=\203F\231=\033*\211<\337Z\305=mg\325\275\\\356\002=\324\254\016>\375\312\264=\300B\005\276\377\370P=\331G\270=e\231\024\276\234\344\220<\364\214\272\275[NO\274\317\031\344\275\231P\302=:\330\022\276}\270\246=\362\271\225<\255\245\361<\257\360\301\275\242F\017\275\300\244\350\274\3209B=H\177\342<,\313\271\275k\rs>\025\210\353\274\275\326\025\276\202G\t\276x\217\n>\316\024\007>\257\205\316\275\017\3436\276F\004\367\275s\355\034\275\305\256;\274\262\314\027<\376F\242\275\276\324\017\275a\331m\277e\277\277=\367)\243=U\261\n>\025_\331=\341\240\304=:\3260\275W\020\201\275\0219u>F\004\003\275\324\324\341=\017=\n>6\212=;4jp\275n\210\353<\361D\000\276\302\317\270=\22771\272\010f\034<\3336\301=\345\332\307\275-\305\022>VB>>y\2047\275\343\337\243<\364f\272=\373w\341\273\203\005\260\275\355\232W\275o\203\372\274\006\377\033>\241\257E\272y~\245<\312\221\200\275\230\206\350<\261n\033<\351\177\234>[b\343\2755)2<\236\272\227\275\024\245\000=\032R\276=<\\\336=\247] \276\024\026\206=~\010#>j.2<)^\r\276\2165\035>\261@\242\275\225\253\252>,\336\212\275\373~\"\273\216V\304\273!\215\017\276\243\235q>\235/\005>[\010\344\275\337\016\177\276w\207f\275\"\326\206\277C\217\303=\257#\002>M\001\311\274G\205\353=\233\345\233=}3\332\274gb6\275N\007\226>\254\204\241>\3351\037>^\320\224=C)\252=\343\320\366;u\020\006\2762\312\330\275=\265\006\276\245O\022=\002d\271\275\337\244j\275\205y\264\275Br\024>].\370\275-\206\275=\031/\023\276\374\325\264=\376\021\207<\020 \030\276\372\377\315\275\327\251\004\274V\323\350=\364\244\n\276b\013f=\245\251\306\2742W\334\274-\221\007\276PY/>\246\315\206;TWq\275\261M\317\274\260\023n\274u\370\037>\211g\203\276:\373\224\275*w+>aC\t\276\340@\347=\234\231\310<Y\214\010\2766t\204>\001\357\311\276\336\351\376<\341^\262=pEV=o\355\345;\332;\241=\007\267z\273x\300\361\275=E\215=\022\325\265\275\004\207\317\274\356`\337\274{6v;\326\361u=@\"\310\275]V\325=\301\344\010>\020\0047=\216$\272=\202\0304=\226\274\022\276\177\220\016>\240\306\033>\247\222)=\r\037P\275\014\335\003\275&\236R\274\017LD\276K\277\267;\207q\322=\200\317U\275\202\220N\275+V\034<&\351\322=\003\3439>2d\337\274\244}\346=\321\030\210\275\337\311G\276\262,H\275 \r\347=\240\243[\2765\223D\276k\261\221\276t\022l\275\032\251\225=\010r:>\373C\341\275\315\317\317\273(\204V=\304\262\254\275\201\031\025<\r\346\206=\026\310\030\274\362<\314=g\212\r>\302\2122>6F\345=5\367\362\275\256\275&\276\227\203#\276;\371\016\276\322&\330</\354u>\306aN<\346\t\262\274(\022\036=\022D\027\275\231\020\306=L{D\275\303\221\206\275\344\250\250=L\222\354\274]%\222=\371p\220\275\343\032E\274\3716\305<\376\nu;\363G\020<\246\205\323=\323\315=\275\377\323\005\276*\207\036=\251\344\334=\021cV\275\2615\314=2\275k>)\316}=\261\224p\275)\302=>\224u\347=n\362\207=\200\367\326\274\332\213\361\275f\006Y=\\\270\236\2738\257s<C\373\235\2751S\"\276l*&>\325\264r\275\340~\267<X\341\370\275\342\'\274\274\215\024\333=\241\215\003\275\312\270U>7\317\030\276\033\000\026=^\177\236\275)\037\006>\347a\212\272\351\261)\276|\330\321=\222\321\274\275\302\261\270=\216\372\353\274\2259\357<\241\261\233\275\r\364\363<\306>~=\31093\274\314FJ>Fh*\276O2\373=6\n\254\2752\317x=\001\216?\275\233\300M>FZ\351\2759\227\314\275\373\301\316\275\330\206\231\275\336FK\276\206\304%\275\335\232\t<mv\027=G\020\343<tr\301\275\305\022Z>LT2=\277u\357\275@\314\314\275T\245\201<$\336\345:<\364\t\275\0274\252>\233\261\276\275\307\214\225\275Z\306\233\276^\371\331\275}\266\026\275\035\213\212\275\263l\214;\351N&\274U\004[\275\221\004\326\274\215\027\213=yH*\276}\2341=\346\265[\274z\223T>\366p\017=\216\217\222=\274\177\326<j\024\013\276Q\221S=6{.=\360v\224\274\322\3514=\242\262\245\276\3551{\275v\200\351=\032\373\324>\005\273\322=\317zB\274(n\240\275\2675\365\274\267\374\275=\026\314\223=%\304d\276\276\367\017\276x}\273>\322\341\366<\365:d>J\313!\276{s\220\275\t\002#\276\351,\030\276\216\026\271\275+\263K\276I?\002\276\205\014\n\275\304L\331=2\311f>\304v\227\275\306\212V<\367\2663=hN\265<\344<\265\276l\265\240\275~\273\203>-\373\210=\276w\000>\3426\031=cq\310\275,\364\207\275x\310\250\275\261\361+<u\246\003\275\212\233J\276\307V?\275\020\372\226\272\217\330\241\275\355@\246>6\254+\276\020|s\276\374\275\210>\341\211\004\276\004he\276\271\330\356=\272\232D\275<\334\263=\375\254\"\276j\031^=\237\223\006>*\377\327={E\026\275\255N\022><\222\"\275\214\304\230<|\232\326<\244\350\246;\036\000\272<\231\371\222\275)\035,=\350P\231=\340\003\321\275\014g\264=\242\362l\275\007W\013\274\004\206\231\2737\376X\275\276\2604\276\236^\326=<\2743>\243#\016:T\010)=g\353\244;\003\262\301=\317.\022>N\233\207=/\347\236;\005U\237\275!\313W=\332\021(=mH\234=\202\311(>t\331\236=\022p\332=\230T[=\203\314y=\352\260\233<\261\330\004;\207\345\364\275+\213!\274\262:\276<1f\000>\325\213.\275\246\305\321=Ng\006\277\367\355[\275\241C6\275\220\300\320<\261\200\266=\204\367\225=Hu\257\274\312<\002\2766\315\035>\344\023V>\361\355<=\344\224\253\274\370\355\211=G\010\030\276\316\362\230=\001=\334<|b\006\276\323\330\215\274\330R\202<\235\014\242=\343\341\025\276z\002E=\035\366^>\203\225b<\357\026\311\275\271\234%=\326b!<\252E\360\274^\361+\276%\340\300\275\353\345=\275\300\315\r>\347vT=*\257\341=\207\221\031>\223\371\362=F\324\'=\0042\275\2755B\260>\224{\001\277\240\242\217<\027m\354\275\021 \344\275\020m\034\276D9\241<\013Kg>,\025}=\221\024Z\275!\251\343\274\224F+\276\337\007\352=\203M7>g,\026>\303T\316;\303X\235\275\354\rn\275xp\371=\226\317\246=vq\344\274\221\224\306\274}f\017\276\001\362\326\274\370\255\377\275\010-2=\360#\346\275t\025,\276H\3446\275u`Q\274w\221\377\275L\270\033\276\306{\\<:^\202<\260\254\374\275L~\243\275\032f\223\275\206\220c>T;\214\275s\275\340=:\306\210>\010\274\225\275\256xL\277\346fq=\353\023\227\271\244\0303\276\256QB>\034\225\213\273q\366\256\275\264\372\334\275D\001\213>\375\224\">\325p\235\274&\312+=\316\230\367\274\rr\205\274\006\305\030>!\255 >\235]\202\275`\320\212=\344\375\236\274\277PE>\333n\010\275f\005\205=\256\340\030<\360\342X\275\274\342\r\275\014b\204<\021X\016\276\212\004+=\304\234^\274nX!\275$\217\036\276>\034\007\276\032>.>\276V\006>\020\314*:\032L\272=\321\307\002=s\020k\276\307fr\275\336\034\254\275\2204q\276p8\255>\031Z\251>g\347\377=>\373\311=[\245r\274\267\220\251=\212\354\213\275\305\234<\2760\004\217\276r\3611>\017\366J\274\211\255\265\275!\247\220\2751y\266;\377\017\036\276E\\\326\275\2326\260=\303en\276pq~>\177\366p\274\224^\313<u\310\022>\013#\262\274\305\363\r\275\3307E=7\234(\276\254a\274=b\032\313\275\361XX\276\211\253:\276y\014\020>\267V\342=:\300\241\273\177XX>\n0\355=\250\277\t>\341`\375=\024{\244<l\227\373\276\220\343<\276r\306\032>e\227\234\274\362\202C>Z\302\002>G\033\010\2750I\207\276%0\340=\026\035>=\367u\022\276\223\202\341\275swo>\334\241\200>\354\006\300\275\001Q\026\276\201T\304\275W\363\342=\272\020K\275\311D\016=\r\205D\275\032\304\262=D\027\006\276\265\317m=M\245\236=\250\312\253\275\366\000f\275H%q\275\037R\344\274\030\027G\272?V\004\274\327\304\006?\034\225\321\275ib\216\275\034\305\255;-\'\003=\033\237:\276\235`\254=\304\331\031=h\r\025\276\207F\237\274\007!\213\275\327\321\255<O\321\362<\252l\314\272r\036\016>\003\333\271=pzz<\003G\250=\325m\352\275\244qf<\364\274P\276\353z\202\275\230a)<r\236\006>N\325t=\252\327\210>\346=\215=}0\224;MB\236<\323\001\256<_\366\253=^\\\337\275\362\327\256<V\177\001\276\001a\215=\223\256\375\275\000r\311=\014\246\222\275\005s,\275\2406\307\275u\341,\275\360M\000>K]\230\275\352\013\320\274\270!N=\017\314d\275\322\313S<*W\374=\350\223\233\274\2454\201\275\017\372\313\274\311\2756\275\2314\307=\223\206.=\003}s\275a\3446=\022A\320<#9\314<De\201=\255\242\230<\365\366\031\276\376\334\t\275\022.\036>\276\2221>`\200\367\275\324\340\342\275\344\307\340\275d\020\325<T\265\014=_\r\277\275\370\373\365\275Y\216\370\275\323L \276\"yw=T\"M\275\364D\232=\3640\263\275\227\001\360=B\273r\275\301\232\245>\262\220x\275\267\314_>\025\242\r\276XT\201>\322w\006>\340\026m=\313\210\213\275b\3705=s\253\323\275\260O8\275|#\361\275s\264\372<\224\"\210\274D\r\275\274\277:\030\276\270\273\373<b\315\033\276|\244\375>\232\205@\275\201\215R\276\035\337\001\2762\2255=\335\323R>k$R>\246A\324=\250\366\204\274\344w\314<F\251#=V\361\366=0\036\220\2758V\306>\277\373G\276\310\312\007>\034D>=\031\332\276\274\033\361B\276\031\334\233>\"3\306\276\304\261U=9VF\276\336\rS\274z^]<\1778\312=\242\355)=\364\272\007\2742\026P>\245\023\277=\231b\365\275\013\360\270<\225\354,\276Yi\022\276\014\3170=\3764!>c\374\r\275\0248\026\276vuJ>\332\366Y=>\206\343=9\335\254=N+\000>\267\226\304\275\311\".\276\n%P\275\206MP\274\213~\266\275\277\351/>-\373\245\275*\340\331\275\373\243(>\305\275\032\275\025\200\214\276uU\221\273\ny\213=\360\325\274=\227\014D>\347/\000>\307\370*\276\250\t/>\210\346\310<\265q\353\276\357\341\030\276\201\272\362\275K\334,\275\227\023\026\275\256\004\254\275\246\357\316\274\001e\220\275\014\322\245\273@\214\025\275|\362\017\275\036\373\226<\r\2070>\300\333+\276Q\234\230\276b{\216\275\355\373\207=\345\375W>PI\256\275\345\023\225>\035\376\340=@\006I\276\236\001\360\273F@\210<s\3174=\275\336\235\275`\030K<\277v\200<\337)\310\275\372i\373<kcc>#\315\326\275zm\233\275\313\304\220=\305(.\2765\333\031\274\376\207\177=\322\341I\276\203{N\274f\215\013\276Q\325q>\302\177f\275\306\010\223\275\334P)>\3050\316=\001\270\023>\376\306\252>Y\322\274=cd\025>t5\253\274\224O\326<\000J\r\276\026t\211\274]\372v>\277\337\273\275\022\204\243\275\360\264/\275\275rT<QK\202=\374\2077\273m(\262\276\266z\326<\221~\257\273+w\356=\362\246\215\275\036\'\014\273\333iE>y\276\327\275\t\262)\276/\260T\275\303\370\006<\000\245\243=\303[\363\275\357\001\207\275\302g\031\276\031\024\256\275\334Y\002>\035\023:\274\314(\022\276\312\277\306=\213X\327=3\263S\276/\036\276=\366\301\036\274\366\214c=\262\346>\276|\367\r\276BwS\275])U=\034\302\036\276L#F>\021\376Q\276\275\224\034=\224\026\013>\036\352\276=\006\232\240=\241\336\223\275ZO\000\276\203\261.=\002\241\364=Vh2>\367\304\263\275\2127\223=\365\350\256\275ED\316=\373\034`>\250\320\">bs9> v\023>\016\373\316=\030\'\310\276z7\352<\325\366\203<\212\270\306\275\270\235\273\274\251,\037=\020*\206\274}X\301\274F\005/=#${=\203\030\030=j\336\036\2767\352B>\337!\266=s\t\237>\302]\215\275S1\270<v\243\036\273C+\023=\214\250\250=$\022\211\276\256pB=N?H\274\335O\367\274\245\214V>\243\3344<\003\371b<\231C\022\276\177dL\275\0146^>\370\022\023\275\305\007\370>\223\200\212\276\264\373\r;\347\327\204\274b[S\276\026\003\353\274\305\016\306\275e\354\005>:h\360=:\323\033>\353(1\277\370)\010\275\215J\250>\017\376\022>\371\234\265=\252\033\003>u2.>=Q\214\275\232\246v>G\037\277=}`m\275K\323#=J\246\266=#wg\275\004\035#=\274\270t>\333H\026=\322\235\213<\032\232\r\276\253q\017\276\231\335\030\276\345\317\003>Z\341\r>CA\301\273\025\330?\276\315\201\211\274\377\205Z=6\310\234<#\334\035=\\:&\276\2074\014\276\t\222\017\274\244\345\216\275^\326t<(\206\365<\364\364w\275b\255\221=\210X5\2764\000\365\275)\314\014\276\2629A\277\217\245\t\276\220\373\255\274T\313\320=\036\220\322>\013+\230\276\237\264|\276\203)\232>\026F\021>zv\013?=\"\214=\336T\340=\007\3275=\361\273I\276\247\262\234\274D\224\372\274\333\307\260=\226\266\371\275\340R\036>E\227\006<=\030`\274\316\036V>\274\304\000\276\361\314r\275\330G\025=\216T\377<\345\272l\275H\207\025>B\034\222<\024\276\007\276L\253\210\274\313\373a\274P\357):L\227o\275\322\002\366\275\t\232\t>bK,=I\0219>\202\262[\275_\r+\276*\r\233\274+P\013\276[pq\274L\220\217<\247+\253\2742\325=\276gh\317\275\2441\023>\362\226\"\276$C\347\274\370\207\261\275\371\n\021>\200!\256\275m\210\250=Eq?=S\034>>\362\351#\276\260K\235\274\240\001\324\275\337\304\350\275\2770\232\275\331h\215=\211\246u<H\261\257=\003z\007\275\310?\302\275N\301\222\275\201\214\350=\003b\277\275\177\226\240\275\3468\\;F~\027=\246\334\276\275u\016\334=P{J\273\031]\333= 4\"\275%\371\375=\302^\t=\23199\276r\251\004\276%>\272=\031+\007>\300A\306=\337Oi=\377\220\254\275\000t8\275\031\201\033\276@\035\222=\326u\276\275\001o\225\276\357\314\003>\033a\371=\004\373\232=B\242<>&J,>\332\270\003>@\026t=Q\\(\274gH\375\276>\243 \275~\024\007\275\327s$\275\001\260\303\274\212L\031;0\r\247>\303j7\276\001\330\177>\006\346\\\275\340z\217\274\0300\035\275Q\222\016>T\006L\275#\025\374\273\246MJ=\300\337\236=\314]p;j)\357\274\307\200\344<Q\177$=\316\363>=\326\321`\275E\333\027\274\223\000\352\275%\351m\274d\304\363<\260\225\307=\251\361\006\275\000G\253\271\362tX\275\300v\261\274\225VR>\304\332\374\275\232\3279\2764\350\267\273n\233Y=\347o\366=*\362J\275xxs\276\217\370-=\303\334\026<\\\001\n\276Pis\275\330z\032>Rq\316\274\224\207\270=\024M\326\275N#\032>\376\243\027\275\255\022(\274\001h8<\310\030\025=&\000\023>\322C\020=\351\243\024>\342\267N\275\316\026\365\274\366z,=\335\032\326=s\370\305\275\220#,\276\0176\036\275\n*\302=\316\366\365<\270\006\362<\251\017\020\276\\\321\201=\377\323Z\275\227\370\271=B\360:>B\371\004\2765\n\312=\362\303\336;\243\240\207\275;-\220=\014\3652=\246)&>`\2121\276P\300\222\274\352\247.<;|S\275{\026\307\274X,\324\274B\361\313;k\244\300=\270n+=\020P\324\275\351(\303=|\324\033\276\0265\215\274\375\311\240=]\350\356=P\270\372=\021@1=\201\352*>-i^<\035\007\017\275\324L\005\275\351\316H>#M\265=q\351M\274JK]=\332\0341=\274b\020<-\273\210\275\221\202\3439\251\336d=\'\357\342\275m\\\367\275s\205P\275G\014z>\026\357F\275m\311\344=\211v\017\276\376\035\032\276\371R\200=\303\205X<q\264Q\276jP\305<\240\333\237\2759e\217\276K\370\252\2759\303<\275\001\200\005\276\371\237)>\350\240\270\275Y\244\205\275\024H\356\274\372\231z\275\004\333\026>\202\346_\276\310\227L\276\271[W>\235B\266<\344\351-\276\266]\220\274T,T=Z\304\244\273\200\267M>\214\002N\275\263\364\207\2768\356\376\275\244I\236>\374\2200>V\240\367\275ue\010>\'\025y\276U\200\001>G+\250\273\225_0<\264\037\003=\311\203$>\317\202.=-\204o\275\025 \017\276\006\022\255\275\004\005/>\027\347x\275\2315\316\275>/\340\275V3C\276\302\370.=\334\370\250\275\213\347\251\274\317\004\007=7$0>M\266\261\275\211\266><\316\303\013=\266U\034\276g\230\027\276\201\354\301=\305\306k>\223>3>\304\277\264\272GN\025>\376\2653>\272\366b>\222\014F=J8a\277A\252\003\273U\366\017\274\327\223\227\275\321U\346\275M\033\004?\362\203\334<H\327\235>\017[|\276\222N\265\275|\300\223\275`\017\352\276{\364\310\275\306\362\307\275\000)\371\275H\037\224=\314~L<\037\336\023=T\344\346\275\366\216\207\274i\324\342=\364\341a=\257;\247=\327%\351\274\333a\233\273\036\377p=VnY=\326\212f=P\370\024=\312Qo=\313j\374=w\034\244\276-\226\333>\327\351\202>#\357\226;\rL|=\241\010\200>\372p\314=y\027O\273\215\304H\2764\n&\277\233\205\221\275A\306R>\203\334\232\275\365\311>\276\017\233+\273z\243\003=u>\355\275\213\320\366\275\353Z/=\245\254\304<y\360\207\27437\013>J:\242=\001\004l\275\210(\202\274q\344\216=\001\313\"\274Q\353\213\275X\305\231\273D\n9=92\356\275\330.r>\363\232\030\276V\360\'\275NA\237:\014$N\276gg\214\275k\241\340=\323\361)\274\250]\243\270\272\215\373=[K\022\276\200X\\>L\310\264\275}\271#\275g\010\246=\031+A>\241\362V\275\362\274F\276\222\346\334=H\363r\275s\272\001\276\2137\017>i\270\020\275\321\313f=:98\275\201\255|\275\037DI<\266\025\027\275z\243h\275M\254\236\276\317\351\352\275\307\010U=\276\212\355\273\r\007\017;\242\217\320<\376\025\031\2746\006\203=\016\346Q>\273\2129>\377\014\246\275\247\355\031\276\376H\">\216,\211\275\355Rw=\373\247\020\276\036s\346\274\004\310`=:5\">\250\030<\275d\357\231\276\244\006?>\014\215\255\275\034\016\373=K\303\245=\346d\023\274a[\375\275\376\334+\276\273\366\312=\255)o\275s,\210\274\350(\037=b\007\033<\234\020\"\276\204}\'=d\336\323\275fZ\306\273\372\210\034=\315\206O\275\220P\224\275\304n\234\276\273\244(\2713\177\007>-\252\322=\025\321\244=\376\325\377\273\230\310\036\276\257\213\204>/\'W>Y\370\257\276\203\027$\276\303w6\276\000*T=\225\221\266<\310\254\017\276~\235\211>\215\335^\276\312\301\217>_\313\r\274\031d\">\001q\340=$\252\200=c\317\273=Ac\224=\270\250\316\274\300v\235=\346\004!=r\360\032<G\"\343=\222{\344\275T\264\271\275\205a\330>\312k\254>}\035\254\275x#\377;\243\354\213\276\274\215\323<O\364@<\266\0079>\347\261\275\275n\333\277\275\216\274\014\276\020\251\002\274UrI=\303\311\207=e3\213>\311\270x>d\201u\2741\022\314\274s\254\207=\255\035\034\276\304\035o>}\343\242\273p\247\255=]\337\372\273\353S\024>p\247\223=\030E)>\274\321\222=\247\2021\277A=\350\275\036\2351=\3109\030>G&\235\275\233c\247\275\316\371\n=E\263\263\274_)y=?X\326\274 \222\261<Y\033\n\275\253d[=\334\243\323=\022t\277=*\315\247\275&\2467\275\373A\226;y+\357\273\034\224\225=ql\235=DQ\331;\027\223\373<\316\221x\275MV\r\275\330i-\275\353\025\217;\337\'\252=>X\001\275m\342!>\364\n\342=\265\262\034\276\264b:>\021\275\001\276\206\014I>\014\353\247<\301\2102\276\002`m\275Bu9\275q\010\333=\3274\274\275k\206\232\275\263\244\275\27344\202\275\375Y\266<\241\253X>\300\\\032>\016\353\203=\305\354B=)\037+=\207*\262\276K\230\377=\300\037\373\275\374U}=\032[/\276\210\013\265\2759$\016>\354\200$\276cZ!>\310\235\304<!\032\016\276\'\344\204\275w\306\301>$\350\315<Fe%<\314$\024\275\302XD\276n\007?\276\177F^=\224\033\265\274\207\014Y\275&>*\276Z\227@\276\274\242\316\273\3709\306=\251{\313\275w\017\257\274\243Ik=\334u\\\275\2210\'>#\326\330\275\3661\250\274\272:\006>0\300\022\276G\221\007>\254F\363=\023\373\003>\333xH<\217;\255\275\257\210v>\330\223)\276\243\323\326<j\177\324=\227\3233<\367\231\033=x#\216\275\270t\254\274\326\302\226\275\263\200\r>!\r\251\275G\324\274=2X\327\276\354\211.\276\237\032x\275\310\301s\276XK\213>\213&\026\274>\251\022\276\267vh>\322\207|\275\366\323\217>\263E+>\n\322\235=\250_\273\274CK\306\275\300\365{=-\020#>\221\201\247\275i\364\250<r$d<\252\314}\275^\320\240>\377\3718\2765\021\000\276\221\025\225\2755R\262\275\360\037\000\276\177\032E>\321\322B>\215\343\253;i\341\016\275i\325P\276\326\3714\273Is\232=3p\214=\001\265\203>\373\356u>\274\323\202\275\313\016\217=|\232\323\275\336\004\326\275\372z\t>p6\337\2752\271\r=\217~/\275f\256\000>A\366\246\275m\021\371\275\313\215\206;\227H\231=\013\345\177\275\362\266\026\276\301h\005<K\324\246=\353\302\223\274\203H\257>\331\315R=\211M\022=\312\003R\275\216v\200<\251Z \277\242\252\025\275\324^#<\362\366\325\274\365\362\360=\322A\343\275\257Vi>\261\204\027\274e\301\217=\023\225\225\275Y4==:2\336=v\t\230=\321\2353\276lJ|\273\224\351\335\275\0008\210>IM\033\275\001:\314=\310\204\006\276@\216\347\2752\332\340<\273\275\317<M\337\236=\360%\\=\272\3056\275\254\301L\275\272h\010=\t\0004<\006\2170\276\372\222w\274\243\332\276\275?\031\021\276\'4\235=\375\024\321\275<H\025=\214\345S=\253\020\376=^\244\325=\346\253\226<\255;\275\275FD\337=\244 :\275\236a\214=\205\330\300=\272m\021\274]V7\274\034\231\360\275b\021\n=\345\301\231<\264\341\272\2752\3171\275]\270\203=\177\357\237\275:\264A=J_\340\274V\031\347=\374\267X\275?{P>\310h\316=h\232\032\276\265\221\010\276\006v\006>?\342\371\273\363\372\335\274\307\324\037\276k\002\212=\270* \276\246P\024\273\333\303\261\2732A\232<\332\232\026\276\325\031\263=\2346\221=\356x\205\274\244\364\r>;\243t=\204\305)=t\235\'\275\30077<\211\337:=\233\276A\276\246\264\366<x\277[>n\013D\275\267S\257>\004^\377;\333\261\204>\266/\370=)Qb\275\021\336$\277\202\372*\275s\230\362=\247+\025\275U\013\276\275\226\226\303\275\222\373Z=[T\360\275z\343\260>\001=3\276&:\251<\324\222\016\276\341o\214>R\226\307\276\274E0\275h\035\375\274\274\215\321\275\365H\265\276\323l`>\3273\253=\201\355\003\274\200\3041\276\336w\006>\315\243\260=\034-\221\274\'\340I>\321\235\232=\321\014E>\263\tI<\374\010\251\275W\000\361\276\033\010\025>\312\372\315\275k\230\334>\320yu<\267\373<\276nD\202\275\020\233$\276\204\354C\276\002\274\177>\266*\030\276\373~\025\276x\333t>\206\230\027=\024\300\235>}\311t>\311\273\261>\013\360\241>\375\237\225>!\377o\275\251)\244\277\317\022\201\276\233\375\251\275!@f>2m\343=\023\237\356=a*Y\274\217\202\317=PE\204=,\3266\275Sb\'=\336-\336\276\0149?>;\332\230>\027\003\334=\260\343\260\274}\002\r=\240\254\372=\262\3016\276B\237w<p\367\275=\235q\017\276\305Q\245>\223q\355<MA\217<G@A\276\215e\212\275\005^L>\330Y\242=G\375w\274\365\270$\276\372\371/\276\201\250\344=\030E\334>(\241\243\274\001[\226=\350\361\271<\032\327\266>\315f\300<9\223\240\274\035\316\321\276T\226\340\275\301i\"\276\024+\366\275\227ke\276\242\360\212=X4\'\276LC]\275u\302D>?A\177\273\266\\\251>\251{-\277\210\\\034=\206\023\206>\334;\324=z\201o>@\271\n>\rX\236=>\t\313=\335F9=M\322\267\276\323\224)\274q\023\034=kk\322=D\\\021>n5X=\254\235\241:\255\323\213=\302\246r\275|D\274=\314)\261\275\003/\206\275L\235\003>\324\370\274\275\017xI>\204\211\265<\247\333\010>\342\213\261\275.\275P\275\276\317\316\275NN\004=\326}Q\276hNf>\020\276M>H\237@>\307\233\237>\274\243\322=\007\206\371=\331\217\243>\217\006S\274\370\243\240\277\233\242\007\275\205\362\375=\262\270\232\275A*\204\275\370j?\276\307\253\207\272G\233\267\274[f\372;\231\255O\276\226\245o=,\210\032\276\352\213\215\275\311W+\276:\321\311\274\323\263\024=\305.\370=\245[\267<\207iN>\265\205\350\274\215\265\352\275X\357^\276\277\334D\274\357\337\341<#i\t;9j2\275\016\247J>)\256N\275\007x+=\265b\322=:\337\204=b\265t\275;\335#\274\023\337\005\275\301\244\">\346\272\210=\251I\022=lD\206=6\005O\275\037\376\274<\001\315\255\275&;\300\2764K\316\275\300R\013\275\270\362-=\t\346\327\275\373\\\360>j\t<\273?\017\013\276\3200\246\275}ma>\233( \274\234\332:>F^\315\275aV\371=\257)\250=\025\206T=\230vZ=\251\t\325\274\r\\S=\271\372\"\276kS\204\275\257\355\347=\216\253\375=o1\205\275V\270\326=\300\302^\275\035N\370=\247\231\006\276\231\245\237\275i\360\220=\320\375\220\276\314\362\022\276?\014\315\275\340\314\034>\330\347\\<3T\035>\257J\253=\352\305\013\275(=%;k\230\256<\370\027\251\275`?G;\227\002\010<\212\020\321\275,@r=-CB\275\265\373\243\275\216\337\016\274+\273\034=\241\304\315\275\030\311b\276CK0=\350>\264=S\353\024\276]\316t=\221w\207=b<\311=\000\220\033\273\246\"^>\220\032\332<M\2433\274\223\354\365=\234\356H>\340\377\036>9\243\005\276\222\243\237\274x2\232<\237\203\230<2\311\246<\034\\\244<\375\223\020\275\200\260!>\313\364H=\326a\272\275d\230%\275\263\367\273=\226L\275\275\222\217 >\304\210\024\276\221C\030>3A\207\275\304\\J\275\203\253\230=\221\217@\275~\246\024\276\016nR\275\314\025@=\017\275o=2 t\275lH\302=\206<\211=\273\367:\276\300<(>\234]\370\275a\355\200\276p\276\324=\323\306\r>\233Q.\2765\351o>\371u\256\275\030;$\277{\2153>\002\322\271=P\351@<\020\276w>d\231\310\275\273\256a\275\305|Y\275X\313=>\252\303\235>\035N\364\275\027,\373\274\302\267\313=Q/\335<\364T#\2765\333\344=k\214\374=\225\207\274\274\266\276\340<\371\003z=\353\260\315\275\357t\037>t\246\t\275\366[7=\377\274\'>,\014\002\276\200\371\332<\221B\246>\213\001K>C\002|\276\260\370\341\275m\210\344\2754\366\316\272\226Y\313=\310E\027\275\202f\217<\215\t\330\275\250\274\263=\360\0270\276}\315r>V\344g=\260\001{=\210b\255\275\031\326\372\274\304?)\276\377\306\242>]\245#>\325\363\245\276\374+\277>\364T\211\274\003G\231\276\031\236\350\275\020\221\002\274Z\r9\275\023l\005<\036\241\001\275~\326\250<\212\264;>i\016==6\256\212=I\367:\277\036X0\276\331\311m> L\305\275\020\036\177>\307\342\374\274\271wo>+,\262\273:e\373=$D{>,T\234<\366eA=\235\250\264\275\344y\266<W\253\221\275\314\177\373\273\346\246f=\351:\010>\352\205\n>\252\215\246=Uf_\274\274\356\246=\361\017!>\010z\334\274\264\004\236=\265\327U\273\2029\360<\236\352\212=\024\226\213=\313k\n=\350\224\231\276~\375\363\274;\357I=\274\'y>\372\267\373\275\225\306#\275\223\375\023\276\370\250\325>\021.&\276\270U\211\275M?\256>\355\355^\276\340/\3239j\365%\2766LR\276s\325.\276\343\216\244\275%\021\013\275\017eE\275\036\177\310>$\356\262\275\3224u=\021\220h=\363\317\210=EYB\276\345\354\'>\2050\304>\2655D\276\260U\363\272\016\356\037\276\351r\240\274N\373f>+\256\035=\032\340C\273xm\250\275\301QC\275\344\226\224\275\216\001o<S\023\266=\251\235\205=[\004`\277\372P$\2762\010z>\325\245\267=\342p\276<t\341\030>\016\201\201;\241`\205<\357n*>C7\207>\257\024T\270Q\267\216=\371\256\263=\007\"\351\275\023i\031=\271T\026>,\3632\275\371\334)<\025\262\205\275\027\313\t=\305\365\315\275^\251\235\275\225\020\"<\314\021\236=(U\346=-\223?>%[\370\274\214\236W=\216\271\376\273\237\277\241\275\260\260P\275\035\372#>\374\316\323\274m\277B;\200\207\027>I!\n=a\027P>\314\373?=>\227\342\274SQ\214\276\022\377\250=GK\332\274\243J\032>\254\301H:\344\364Y=]^%\276\037\210q\274\307Z\316\272\"s\251=a\000\244\274\270\014\231=\225\251\202=\373\036#\274[\337\276=:\360%=\212v\035\275>\266.<\226&\300;\014A/\276h\016O>9Q\321\275V\320\227\273A\335V>\022\365\204\275\212\342\264\275=B\267\273\303\037\224\273tA\372=XG6\276)]\260\275\036s8\276\030\363\325=\275%i=V\331\373<\"\231\231=\027\347\320<\330\215\027>\311\236\004>\310\226\330=\273\244\254\276\311\364\"\276\364\233\336=%\323P=0\260.\273\251@\016=\t\216\016>\036H\274\275\250H\324\275\241<\030>Cp\024\275b\336\236\276i\240\226\274\244\373\345=\312\242+>\352\333\270>\226,\202>6?\225>\304\350!>a\035\345=\314\334\334\276\2401\021=*$%\271\225[1\276`g\356\275}k\264;\225AO\275\220\324D;G\345\233\275\016\357\352\274\363\222\374=\010\2439\275>\233w>\363\210\363\274\032\251O\275g-o=5Zf=\321\332\304:\302n\\\275k:E=V2?\274\025a%>(\025\003>\300)G\274-\357r\276\207\272V=\377\275\022\275\353\260\r>\0109\035\276j\346\257\274\336\311\337;\321s\007\27661u>\037\314\003>\254\303[>\276\261\177>\345\242x>\212\016x=\303\276\017>0\227\254=\266\267\007\277\024\033\334\272\320\004\036<\277\024#>\356\324L\275e\266\026=\333\255\264>\\\236\351\275\n%\032\276\276k\211\275\032^\355\2759\303\316\276\231\000\247\275\034\340\253<B\334\221>UG\031>\363Jo>N+\027=\035ep\2757\311N>\363r\032\277<\326(\276.\010\256=\026a\254\275\345\364\032>\233\310e=\246\2369\275\322\314A\276 \370\332=\361n\221<\357\241h\276\320x\037>\026\241\335\274\003?\221\275\211a\350=\214\3363\276\010\231\312\273\361TI\274U\217\253<.\365\306;\214\177-=\324+P\274\216\255\247\274/B\237<\026\223\332<\337\360|=9{\205<\021\001%=\330B\213>b\027\014=\221\352\253=\034\361\261;\227\245\261\273\200\237\034\276\006\365\215=~,6\273<\007E>\224\016\270>\236W\234\275\210\272/=5\236F\276\004\030B\276\272I\013\275@\032#\275-r\222=y\0263\275\303\273&\275r\n\234\275<\346\t\276\366Y\360\275~\335I<\013G\322\276\022N\275=I\275\223<\265\326\314\275\325\266f>\376\331\031\276=\354%>\035x\362\274\305\215\177=\212?\213\276\257\373\253\275\314\215\217\275\005E\350=z\027\214\274\214\272\353<[J\322>|\215n<\005\230#\275:M1\275\035\006S\276\202|\327\276N\204\017>\345\274[>y?\214=\000\333\311>\236\227\262>\252R:>\223\240\240;;\003a\275y\253\217\277_\350\353\275\213\031\352=\020\322\224=v\326\377=\277\320;\274\334\354r\275h,`\276aB\271<\016H\220<d?\205=\205\340(\275\305\337\006>\307,\t>\334)\250\275\267+\333=(\307\304\275\312\t\356=\202\000@=\353\352\340\275\274\321+\276\376\261\021=\325C\030\276Sa9>\331\203\213:\357c7>J9\255<\246w\327\275e\360.=Z\307\207=\006\361\262\275\342\017\312\275Q\215\330\275\321\001(>\237T\002=\033\341\342=\265\210\323;\207\2613>I\004&\274E\301\231=J\021/>\371\371\230\276\246\231<>\271\204\275\2758\240B=F\336\200=\330\371Q=\351\017\020>>A\314\275;\224!=5\307\236\276\242\213K\275\244\315\325>\311\332\242=\'\206~\275\353\304O<\0071\274\273\313\276q\274Y\327\270=\261\331\020\276O\\D\275CzC>\377\251\033\276\266=R\276\207\320\014\276\301\315\247>\244\036\273<\274\353\253=\037\376\234\275\004\005\211>(\323\205\274\306\270\213\276\3637\277\275\204\246\001>3`v<\234\000\213\275\340e\030>@u\212=\364\274\226\274\221{\246\274\016\2554>b\013\023<\247@\265\275\305/\236>\224\3133>\306\347\345=\n\305\002\276\327m\221>\363\260\362=\210-\267;K\260\\\276\377\023\224=X}\030>A\243\200\275\216\177d\273@6\031\276X\336\316;\225J\207\275\004\367\337=*\331A\276{#\017\276|\032\361\275\036\230->\321\374>=\304\304\334\273\031n\353<Jr\001\275.TB\275q\316\224\275\244\205E>h\320\024\277\347\322F\2762\363+=p\233t>,*8\273\022%l=_\031\224\273}\003\334;\335t}>xA6\275\251\275\343\274\323{\033\275j\030W>{\367\007\276\340\356\376\275\323\257->l\0003=\022\035\214=\336M\263\275\034\264\263=\231B\001\276%R\275\276\020\r\210>\034\343%=\313\030L>\356\373w=f\212\214=\275\226\'\275\324\266>\276,\021\004=\031^\212\274a\014\340\275P\235\037\273\r\027\003<\341\t\373\274[\257$>P\213\256\275\r#\363<o#g=\211\353\205=\361\301\302\275^\300\254\275\3308\"\276\272\277\243\274\361\334X>ibw>\247}w=\313\301!=\325\251\243<i\034_=\035lm\275\004\265\226=\200\254\277\274\275\262}=\234\2439>\305\254[\276\016\377\037\276F\354\270\2756%N>B\311\343\274\323\365\347>\212\247\034\276\226\244\270\275\265\256\013>jv\r\275\033c\262;\277\274$>\323\244\314<\022\323\214\275-\361\324<0\306\013\275~\257W\275\326\017\202\275\374\030;\275\016\257P=i\310\014>GK\237=8\315\020=\030\211H=\343\263\003>\025\316\353\273H\231\277>|\260\005>EB<<\324\244\220\276F\265\371\274\365n\273>&\t/\275v\237%\276\345Ud\276G\0272<\227\364\345\274w\246\020>\225\231{\2755\007\277=\335\261\013\275\232\373\362\274C\352~<\362h\376<\317):\2769qG>\220\333R\274&,a\275_\347S\276\323\005]=\003@)=\307*C>\025\217\226=:q,>\375\356\354\275<\343\360<m\371\017\276\377\344\241\275\310S\212\272\303\337\253\275\030\377\357=\321Z\210>E\310!\275~\230\227=\226\264\317\275#\344d:*Y\273=\363\207\341=\257\311I>\"@4\272c#\317\274W\206\373\275pu2\276T\224\216\275O9\035=\002:\267\273\020\005\202\276\264\024\236\274\356\025\237=\021\224\247\275\2411\177<\224D\001>\333\313\275=\246\361\\;\352|V=\216\313T\275@==\275\227n\013=F\324\251=(\240\203\274\207\031G>\353\331\211\275\373\t\035\276\227\262#\2759:\224=*\320\313\275_\265q\275\375\021\025>\262;\035\275\323\336\230<\335\272\215=\336\373\364\275\366?7=\364\231\244<\204`\374\275\322b\337<\356\217\255=\037\243\351=\242\\\020\275h\033\212\275\332z.\2764\347\363\275\203\231\377<P*\020\276\017\375\246<\031\221\266\275%\026i\271_I\205<f\316\024>\364\327\250\275F*\275=\317\270\212<\311\322\317\274\203\303\377\275 \244\306=\341\222Y\275\247\243\212\276c\325@\275|2\371\274\030\246\270>\350O!>\301~\341=I6\265\275\335\274X\275Y\037!>\213\222\277\276\'\277c\275e\375\202\275L%\255\275Li\232<\325\370\334\274\244O\030=_\nc>:\233e>$\177W\272X\327~\273}\030+\276Gf\316=\036{X\275\r>\020=\314\355^>\314\027o>\344\255\271\275A`\r>_~p>Ms\261\276L#\204\276\230;Q\275\014\020\333=X\001c\275QV\212\275\023\236\202=NE\232=\"^\353\275\243\373\326=\017\237\000=v\221\244\274\331\227-\276\362\n\030>\206\202H\276~:\026>\033\3328\276\303\300E>D\215\243\275\253_\010\276\200\036\347=\310\230,\277 8\007\275{\212\235>u \202\275\305~?>\240\316\306\274\036\211m<\243t\025\276\022>\013>\252\313H>\260Z\036\275\214\344@>S\266\342;u\215-<\341\200\022>0t\357=\203/\033\276\212H\010>H\036\273\275@\240S\276X\000\375\275jD?=h\354T=I\222\203>\241\266\373=C3\242\275w\376\231;\2553\210=9\251\232=\341\030\255\273!\360s\275cu\030=\'\035S\274\312\"{\275\202\303\'\275\265\241Y=\017\362\n\275\355`#\275\017w\272=\304\342\335\274\312\033\023\277\306A\202><\257\313>\032\263\201\276\2755@\272\377\000\353\275!\351\350=\037\271!\276\001g\027>\373\231\211<\352\031\374\275\'\"\216=\215\001q=\213 -<\266J\261\275\256`\340<\263\332\376\274MP\225>|\246\261=4\216\221\276\206O\017=\364)*=\205\023\335\274\230JS\275\235Z\226=\242Iz\275\256:\316\275j\371\375\2738\226\234<_\304\202=T\371\247\274\277\014U>3|A=x\342\037\2767\351\323=\000\245 <\223\321\004\276\360%|=TnL=\337\014-\275\375\214C\276au\031=\312\034\371\275]\263\312=\262;\027>\n\014\200=q&+\276=\311?=\332\000x>\205\330\366\274&k\303\276\274\366\236>\010\257W>vf\201>\214G\326>\251\270\276=\010fs>\237\001\203>\343\262\207=\321\325\244\277%\276\350\275R\316-\274H\263\302\275\202\206\006\276F1\354=R\242\010>~\033\236\275\363|\305<4\270\300=H\3725\276\010\033\231\274\031<d=x\267\226>\260FI>\352\334\333\276\273V)\276\212\233\363\275\370\"Q>\226*\336=\245\263\270=pD\336\276\321,f\275\270TM>\350\030\352=\016r\025=\014\3375=r\3128>\267\013\252\274AY\346=\26134>[6\373\275\034A\314=\013\305\266<@\3041>\327\200\326\274\023F[>\233\312\350<\3131\r>\016@\243=\230d\223\276\007\200\335=\354\023\021\275\n\373)>g\351q<\223\014l\275\001\221 \276_f\233\275\\\263L>)\362\216>\350\364>\2764\354/\276\024\207\211<Kid\275L^C=\305R\314=\300\305\017\276\375e\202\275%T\264>\204g\036\276\020\313\002=\341l\271\275\334\214\276\275\206\203\352<>l\017<\325\363\244>\264t\252=\004}G=\337\203\000>\030\212\"\275\314\225}\276\322\244V\275_\322\325<\377\260\344<\352\206\372=\222\275y>\312\242\373=\204\312\007\276\314\225\035\276\254{\245>SK\342\276\350\262E\276\201\302\316\275\247\213\003=8\035\233=\356\014\257\275e|>=\225\271\246\2757\335\315=\214\\\025=Q\263y\275\033\333\251\274\227\212\251\275h]\373\275Q\037\000\276\272T\256\276\357X\240>\314@\025>)\350d=\240\273\333;rT\017;\023\337;\276,\327E>\332\037\277<\250\200\225=\377\314\025\276^\355H=?vL=e\266\277\273\"L&;d\t\266\276!\0327\276 fR=\340yT>R\032\014>T7\316=\313WF=\004\305a>\321E\036>\255\313o\275\277\362.\277{\037`\276e\257\232\275\201\215\030=\235X\221\275\'\337(\275\366\311\302<\317\004\t\275<\337\207\275\333\234\362=q\213@\275\324$|\275h\364\034\276\325\260\251\275(\305\006\276b\265\207>\201\245\033\276\331\257\367=\311RN\275\354\245/\276F\241\253>|\323\201=\0355V>\310\354\330=\231\231K;\212\r\211\275\251\n\'\275M\367\230\275)3.=3\245\341<.\031\222=\016\275P\277S\345$\2763\n1>!\305\227\275`e\005>\236\221d=\n\225\370\275\366\277\245=\325-U>\317\361\265>\301\374\225\275\207\352\035\276N\225J=\213p*=L\340@>F\261\214=\231C\324\272s\200\027\276\003\000\n>fV\336\274\255P ?\031V\224\275\352\0234\275FU\347\274.6)\276\005p\030>\260TW\276\354_]>\2470#\275r\335\206<\373\232\316=>O@>\021\247\027\275\n\327\014>eF\376;\330/\r=r\022\332=\020\252\313\274\276\r\000\275\022\376H\275\337\to=\375\325H=\267MT:\332\221\325\275*A\264\275\221\365\217=\'\203x=T\234\227\274\333\307_=\371\234\272=?hR\275\221\335\255=\266\265w=\ne\362\275\233s\032>\324\220\017=i\217A\2761\204\277\275\334\336\321\275A0\357\274\356\2725\275p8\367\272\277\262\371=\274\261\211\275\024\336\372\275Z\340\036=7jK=\'U\203\275\367\353\314=Bp\362\275ul\366\276\351\300\270\275\245\026\207>w\344K>\212\313Y>\320;R>\010\233_>\032;d=\220\201\201<\362BH\277\204dR\276D\2701>\265\205\306<\355\215\375\275\252\306\205>\276\275\206;\320\214\003\276$\243\205>\356\254\212\275S\372\341\276\000A\243=\242\264\275\274\037\342\311=\276\010\007\276\250\232\243= i\252=\332_\371;\250\202\203=g\2265>\231\020\\\275_I\010\276\"I\312\275\374\302\037>\200\317\020>\"\3171\274\215\377\257<Xk\372\275\240~z=g\331%>\2651\211\274\234\201\301=Wf\010=\276i\222\274j\351O\275\312\204\264\275\274Z_\275\255\345a\274\310\252\314\2754\332\363\275\007\246\027<\232\243\024\276\275)\253=\'\r\316\274_\317\305\275\364\324\243=e\025\216\2752\2618=/*\253=\204\316s\274\315\345S\276\304\\?\276\301\342[<\027@*>\353\032\301\275\252b:>\240v3>1\326\025>\210A/\275\t\3705\275\023\344\313\276o\311x\275mp\233\275F;\201\276P\026.\275\240;\326=D\234J>\310\"u=e7\275\275\267\214\326\275\002\211\361\275\335\322\350=v$\270<\212V\027\275V\356z\275\252~\t>Z\3020\275X\213\210=!\214\314=\204\265\207=(\252\226=\247,V\276\324\330\001=Y\'\217=\277\245\257=z=\321\274Jl\204>\231\317*\276\352k\211\275\027\004\301=%\254\350\275\000\243\257\274+\334\237\275\274\303\210<\2613;>2\"\276=cV\257=\t\246\220\274\010\006\214=\343N\234;\033W\235\275\231\370\335\275^\233\271\274\252\177\t>-c\217=\375\336:\276\301C\001\276\360g\261\273\276<\254\273^7\000>g $\276\037\364(\276\300\315\334=\205z\211<\303\325H\274\353\037\260>\240\007;=\244cS\275\365\200\005>\033\2769\276?\"%\277\260?+<\026\216:<;Nq=:F\225\275\256\237C=\305\032\365\275mp\217\275\017\242\031\274\377\022\365\275Wg(=\221\212\035\276Mj\224>\365&L\276I\216\354=s8\026=\264\"D\276z\241\327\274\366\361t\274P\036\341\272\rMz\275\262\006\365\276\303\275\262\274\2622\200=\203\003\t\275W\362->a$\313\274s\3302=\254\212\327\272t\320\240>\264\372\310=\037\307\333\274\335\322Q=\014\\\326<\270\321A>~m\221\273\235n\221>\020\372j=\372\332f\2768\341\023\274\346+\230\2765r\341\275\027\275d=l1I>\214\032\014= \374\344=\001K\200\275\025c\254\275&P\032>}\322o<\375\221)\276\267\277#\276\016?S\274\367\036\n\275\261\217\251=\256\261G\275g\370\220=\321\375\274=\256b\272:\356sG\275\227\027\"\276\266\234\255\275wdT>\313?\002>\366\303+\274\243\370B\276\377\361\372=2QX>V\366\003\276\312\023\330\275\207o\256\275M?\010\276e\373)>\264\017\267\275\372e\266>Vn\005>\357Q\230>\013H\335\275\370AK\274&\004\313=\3210V\277\223\350\325\275\211\361\212<\253E\357\275\314\236\360=\242\354\224\275+\215\211>\r\234\023\276\031]\202=\253hC\276@\230\233\275\201\344|\275t\244\326\274\254Z\374<.\276\225=\332\201@=\336\223\035>f}\216\275\003\0108\274T\006k\275\010q4>\006\353\022\276:\215\245=\310\252\323=q\ns=f\177\272=g\351B\275m@\r=\315\013s\275V\370\243<\274\252f<0\243\344=\333d%>\240s5\274\020;\215<A2$\276b\334\346=\005\261\352\275\3542,>\212\364\207\272\201\305\204\275\322|S\276\300\301\273>\365\223\035\276*\364I>l\026~\271\347\3675>\232\316\226\275\205\tQ\276jg\021>+\277\177\276\276T\247\276N\330&\275|\001\351=(\3755=`\017s\274\266\224\020=\220\316\351\275\324\201\025>\243\022\236\275\247pl<,\255\221\276\302\025\245:]\242#=\305h\207>\277\363N>y\340_>\202\332\027>\232\271=>\244\303\253=V\357,\277\342p\001>H\260\270\275\260\027\360=K\360i>\3312\374\275\334\217*>I{\334\275r+7<-@\236\275\235\221\351\275\277`{\276\245*g<\271\376\347<\374\'y<\021\016\216<h\265\311\275\240\334.\274\266{\300=k\253\225<\273O\242<G*(\275\272\326\253<s\350\013>U1\225=\323\341\314\275\320\352\266<^\001\265\274OL\225>Q\375\332\275\007\3462\275^Dh\275)\213`>e\240\257=\224\n\216\275\265>C\275d\202\350\274\002K\257=\307\273\030>2}\300\275\315^1\275\212\305\304\274v[\240\275!\332\243=\267\251\037\275\373\346\370>\273\037\244=D\356H\274\262a\024\275\273IE=<\366 \276\033[\205\276qa\222\275\370\262\t>f\254\032\276\246\010\204\275\031\357\026=w\210\302<\344n~\275\265(\263={\021\303=\271x\313\276w\037\271=\235\021\300>\276\352\371>\247\005v\276\353B\305;\177\022\312\275}\224Q>\'\265\356;-\272\237\276\265\004l\276\030\030\006=\354o\240>(\375\224>\377\314\310=\207\326\341=\246M\307=\002?\305<\203-j\275\265\324\n\277\3355\312=\026\343\236\274\372=\276\274\027\036r>3\264\331\275\253\373\207>\007\310o\276\277zX\276U\235\363\274G`\355\2754\232H\277\224d\372<Q{0>\345\307\032>\260\365\t=8\360\326=sK\n=h\250\363\275\224:]>e}\221>f\256\261<\000\234y>DA(=\344\226\245\275c\234:\276j\355Q\275\274^\"=\014\213\261<\344X<<\342\222\244>\301\310)\275r\252\265\274\203\321\001\276i &\275\373\252\315=RAz\275\376\351\227\274\325Y(=\242\360\237<\236\035\206\275\243{\307;\005!\n\275\005-\373\275=\005\204=p\022D\275\245|\007<}k\262\275\357\375\"<\302\3739\275\227S\324;?\331\304>\375\2405\276\317\346\222>\211M9>\\7\260\276\223\334E>\205e5\276R\017 \2760~\237>\335%\331\275\302m\343\275(\335\326\276\336\214}\276\353\016N\276\262n\010?\177\311j=\231PN\276j\3230=\347\201\t\276b\223\005?3!\021\2771\362\357=\016%~>#\025]\275A\0339>\034%L\276|\304\032>\000\377\361<\250\356\331=w\330P>\244\\T\275lb|=\002o\004>s\367\200=\367\206Q>\373h\327=\254\266\353\2752S[\275y\347~\2755\000\372<\253c\336\275YU?\275\304\250*\2754\014 \275\033\2318>\305\335\257\273\026\026>=il\036>\261e\216\275\302\361\334\275u\224\035=M\354\203\275,\313^\276\300k\337\274\216\026\371=\314\211\007>\311\017o>\221M8\275L\226\257\275\3139\217\275]s+\276\220h\251\274:\324\302=R\360\353<\355\021K\271\335\352_=\\P!\276\356\307h\274F\320\362\273\246\214A>\001\367\225\276\214~\345\275\325\312\217\275\277\320\245=r\206%>\266\377\352\275,B\217\275\333Z\004>w\226u<\210\334_\275\377\t\371=7\2712\276\213\200\023\2758\373\037\276>Y\322=\246|\256>\003\257\211\274\'~9\276!\236\021=\227\3408\276\335\323\201=\214sD\276<\220?\275,\037\022<\334l{=\2320\242<A\210\013>|\267\316<\370\253\000=\322f\320=\353\322*\276\024\212\r\274\237\3360>\260h\t>\267\3419\274\211\203\233\275S\016\260=\362\351\303=GD_\276\n\366C\276\331E\030\276\227\007u=\234\214\027\276\356\\4>\232\301h\275\3003,<9i\250\275\334u\227>\225\034d\274w\014\r\276\200$\221\276\212Y\217=\2012O\275\030\014\334<\234\230\331\273W\267\363=\035u\205\275x;\366\274\301j\314:G\205\230<\177\021\211=}\346\n\276\230\235\373\273\323\345;\275\003v\321=t\271\002:7\306$=zy\000>\037g{<\032^\256\274\271\021\230\275O\355\372;\323J4\276\204\322V\275\361\014D;\210G\301<\350\350*>\004\271\032\275U\354\232\275\322\'\275\275\254\3108>\263\356\261=\001\001\335\274\246\220+\275o\341X=`S(=\213\206\227=hZ+\274(o\274=e\312\276={\"\277\276\331\272Q\276\264\225\026<\335\306\342\275\330\364>>5\376\315<_R\203\275T[\013>9\3113\273c\232\233>\221\354\031>\267\253\002\276\3415\316>\346\240\226>\377&\343\275\357\026\367\275BX\202\276\351\013\002>\247-a\276\231\022}=Xa\034\275\\+x\275\330\314\251<\243J\022=\225\034\250=\353_\331<\221e\000\274 \235\235=\023\206a;\023\001H\276\247\2067=\330\337\355=\007\302)>\266\223\305\275Q%1\276\032\377\267=V\331\212;r:\272;H\354!\276\201\003\233\275\214\371\026\276\372\304Q<\032\'\331\275`@\275;9K\227==\375$>E_\263\275I\230h>\214\273\220<\264#\243\276}{\234>\263^\324\275 \\\023=\nr*\275\237fw=E#@=<]\n\27624\200=\310\365\323\275F\005?\275j\317d<:\273\'\275\357|{=\213\234\355\275\207\372\005<\377\032\007=\354\n\227<\021\211\316\275\226z\217;\014B\322=\227oQ\275_\270\231;\254\320\203\275\335\305!\275U\360\001>\220~\321=\020\000\247\274\007C\351\275pp\274\275\010\347\005\276\243\210\020\277\242\026_\275E]\r>aM!>?a\340=\033\271\213\275\342h\271=\017\030F\275Q\276\316=5\2650\276D\302\034=\014\317\201\275PN\270\274\365\347)\276\300\355\014=y~\246\274 @\224=6\254\333\274\337\347\364<\0171\234\275\343M\310\275\376e\377\274^I#=!\014\353<!WV\275\250\341\277=\240&\307=A\033\211\275@\353\034\276\354~\234\274\375\332$\276\2565%>\203\033\254\276\357\205\243>\307^!=\034\364\272=\2708\333\274\2326B<\330\205e\2763\330\350\275u\025\025\276\016\277\331\275\354\360\333;\315\300\211=\346\317\350=\225&\000>\353`\252=\177\317\335=k\003\003\274\nN\014\276\002!\203<\200\244\021>\202\364\214\276\223W\006>\252\234\366\275\213\302\253>\304\211\311=>\tl\2761\217\215>\026\235f\275\003\265\022\277h)c>\257i\036>\252\022S>t\233d\275\\V\357=+)\034\276\303v\017=,\024\307=\326\206\346=|\340\274<\223rK<\007\024\022\2767n\273<\\\305\371\275\205\277\211=^0|<+\263*<X\372*\275\301\005\312\275\024x\017\276E\214\310<\031\210\262>\010\2165<t\313\346\274\257\367.>\336\321\240\275 \001\033\275\352\247\226<\023\242\201\275\205\314F\276\277\371\000\275\023\2454>\241\246\n\275\020<\005>v[\013=\350D\202=\245\025\335\274)\377\350<\360\\\230\275\222\272\256\275\201\344\316\274]\315\346\275 \274\321=\266\333\001>#\277$>\253k(\276\371\034\032\276GA\016\275\221(\217\275t\r\014\276\361\205\031>\367\350a>\252\305\215<\005\223$>\375\361\263=\2437\025>?\354\367\275/\024\365;;j\201\274\t\211,\276\244\010M\275\311\311\007=\347\216\311=\364\3373>\211YX>\370\242\251=\306\344\205>\033\016p\275\352\237\353\276\002\021\345=\267p\016=\330[\317<\275\315->\342\311\020=\353\250P=\316j\216=K\205\213=\222\323{<\350\023\253=_\264\202\275\276\371\243=V\315\367<\024\020\201=\242\005\266\275\t\311\371=\300\311\301=\251T\257<\016j9>&\223\202\275\356\030 \276(\341!\276\366\013@\276\276\347\222>J\331\353\275\221\315\227>\001\3153\276m.\347\275\3647U\275\277\221\017=\375\231\227\275He\031=\353\020\">\263&\036\276\363\374\030\274\362\333\024:\0056\"\275\366<X\275\305\235.=\314#\003>\363\3555\275\205i\352\275\203\023!\276\212*\006\275#\220\236>\035\370I\275\227\360\275\276\267\374\376=\026tH\276#\275\242>\r(\336\276h2\037\276\004\021\022=\311\335\370\275\320\216\214=r\254{\276\251a\031>\262i\020>l\274\257=\267E\371=\353\360}\275\315\241-\276\371\326\037>\365\362K\276j\303\274<\365\353A\275\263\321\306=O\357p=\370c\250=\326}\205\275\302\271\267=\235X\211\275%\024\233\276\235\006\022\275\246\352\327\274\266^\255>X\375\350\275\270/\340\275\340I\361=fm\024=B \322\274\336\342\303\275\366\016\201=d\003\242=\276\243-\276O\351\261\275\245\256\252\273vl\221=\247g\014>\374t\362<\021\247\273\276DQ\233=]\'\004>&\2014=A\253\215\275\"\2230>\347\367\016\276\254\t\021\275\372\323\367= Y\001>\377$\215\276\265\341\226\275>?\024\276\246\354j\274\376\030a\2746\022\335=\257\375\271=?\020\374\275J\301\023>+<d=\004\3439\276\202z\200>(GR=\377\312\004\276K\360?\275\217\206\264<\237;\n\276\025+\275=J\370(=\275;\244\276#\001v\275\352W\r>\261\261\244>>\207}>\212\324(\276\233\200\316<\006\0027\276\263BM\275P\307Y\275\371d4\276\224\n\266\275\347\005\214\275\362\334@\276!\345A>\n\222\357=\367\342n>\007\337\000\275z\310q\274nx3\276\336\306\027\276\017`\217\274}\000\025>\3106\016\276\302y]\276p\305\210=\336\\7>J\314,<\260\025\350\274\275!\347=\267\335\213\275S\323\212=\303\375\265\275\2705\342<\302\271\266=^\2013\276\251\337\005>Ob\213\275\356\247f>\206\245\010\276\353\r\327\275\366<f\275\016&\336<\'D\366<A$\302\275\366?\234< \326\271=\036$o<\240\3631:^=W<n\307\206\274\3359(\276R\267\356\275\214b \275\330\256D\276\260\025I\274\204\002\002>\3049\017=\2261\022\276`6\252>\256#\020>\220\230\004>\374\355}\274=\010\224\276\2245Q\275\253U\276\275y\334\360=\315\325\217>>\354\275\275\302\025\222\275\rX\342\275\223\226\250\276S~\362\272\r\336\376=\246#G=p\342\021\276\363\332\201;\306F\002\276\235\361\r=1\323\">*\252\372=1\021\256\275-NA<\222s\255\275\256t\364\274|\3554\274,B\020>\360\302O<\242/H\275,-\323=\221\363\013\275\231]m\2764G\232\275\224\277&>%6\213\275\'\333V>\271\311\243\274\354g\201=i\210\023=ca\303<\244\345\217\275ZZQ<,Z5>\214\357\267<\231\200\337<\210\242\231=\200\270d=\214\231\247\273:\262Y<9\203W=\320\233B<%/W=\207\025\256\274m4\311\275\253\030\260\2750\307\205=\030\247T=\262%\274=_\017\235>n\236\201\274\004u\000>\200\325\032\277\215s|\274\373\322\036>\220\323b>\222oF>\017N\026>\345\3212>N\236\251<h\201\355\275\340\337\001\277w\332\217\275zC\262<\213]\255\275\035DU=\006\230\221\275b\204\322\275@[\031\275\226U\305<\251\331\375\274\216\327\334=\215\270\036\276;\214\363\275\30199\276\374\375\334\273v\346\005>4\223x=\327\007#>w4f>\200\202M\275\364)\030\274f;o\276\310\006\'>Z\013\251\275\372 \257<\256\256\033\275?\345>>\\t&\274\251q\024>\2672\035\276\240my\275s\260=\275\023y\343<\346\t\034>\326U\333=\022\t\007=:\327\257\275B\377\256<\237\267\032<\200\031\261=V\315\325\275U\264I\276\026\332X\275\325\245\020<\206T\257\275\231\350\265\274\354\262->u\306\310\275\262m+\276DLO\274\200\276x> \326\212\275\320~\025<\267o\005\276\207[(>\266c\245\273\203x2\2760\036\006\276\001\351\321\274$]\316\275i;\023>qE\202\275\337\212\035\274\020\006`>\262\037\007>I\310\264\275:\330f<\032\303\262\275N\256\016>8\347\304\275\222c\367\2745\231\331\275x\235f>\330_\257\275#v\007\276\"\030O\275\346@3\275\265\275\270\275\001\277C>\226\025%\276l9\267\275\240\013\306\275&#\262\275\317\342W\276YE(=\265\215\316>\222,\363;\356n}\276y\313\322\275\017\364^=\354\327#>\256\024\360\275\321\256F\275~\346\274\275@\036\244\275X\301\367\274\342\214 >\334r\230\273D\274\341=\222\021\207\275\000\254\220\273\240\217\216\275\246\030o=,\324P=\306\356\266\275\013\334P\275\034-\r>\177\206 =\364ng\275\217\242\004=\312\027\255;hN\002>V\006\201\276\017~\374\275\327\010\244>\235e~\276\257#\370>\315\314<\275\210\337|\276W\352_\276\2050\315=,\347H\275\313\270\374=\316I\025\2750\325u>\274\370]\276\236\027\213\275\205v\336\275\373\267\342\275\235y\025>\203\177\315=u\005\274<[&\271\274vR\374\275\352\316M=\007r\017\276\326\275\236<u\276\020\276\367\255\246\275\264\336\367=\244QH>O\177\n\276\002\257\017>\367,\315>\227\236S>\272\272I>f\355\273=\016\240$>\032f\017>\373\t\254\274\266C\213\277\006a!\2759K\311=\206\302\023\276\016Kv\275\305q^\275o\224\t\275^9\270=T\211k\275\034j\323=#\303\002=+\341k\276\267\322\324\275\371\323\021>\315u\\\275R{:>E\317\020\276\214\037\344=\004\006Y<J\202\027\276MX}=\223+\342\276\r\"\203\275\241\260\002>\3701:\275N\003\312>\236o\313\275\031@T=(\216\314\275j-A=[Z\304<U2\251\275b\306\366\274H(1\276\372)\347\275\304\037\213\275\305z\031<\320Ha>x\325\007>\030\202\253\274c>3<\271\340\242\275\264y\007\276\334~\261=\233\325\237\275\037)\241=\237m\270=\237\246\310>\372\320]\276\272m\370\275\213/)\276\255\365\017=PkX\276\003S\'\276C(\306\275\340\276:\275\340\\O>mg\277<\314\020\025\275|C\005;\032b\032\276"
      }
    }
  }
}
node {
  name: "layer2/weights/read"
  op: "Identity"
  input: "layer2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer2/weights"
      }
    }
  }
}
node {
  name: "layer2/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "layer2/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "layer2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "layer2/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        tensor_content: "\037C^\275\0370!\276\205\335\221\275TF\007\276\354\006(\275\022\353\321<\017\245\211\275q\226\013\275\35611>Q\240\267>"
      }
    }
  }
}
node {
  name: "layer2/biases/read"
  op: "Identity"
  input: "layer2/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer2/biases"
      }
    }
  }
}
node {
  name: "layer2/MatMul"
  op: "MatMul"
  input: "layer1/Relu"
  input: "layer2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "layer2/add"
  op: "Add"
  input: "layer2/MatMul"
  input: "layer2/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "y-input"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "layer2/add"
  input: "ArgMax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Fill"
}
node {
  name: "gradients/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_grad/tuple/control_dependency"
  input: "gradients/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape"
  op: "Shape"
  input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/Mean_grad/Reshape"
  input: "gradients/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape_1"
  op: "Shape"
  input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Prod"
  op: "Prod"
  input: "gradients/Mean_grad/Shape_1"
  input: "gradients/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Prod_1"
  op: "Prod"
  input: "gradients/Mean_grad/Shape_2"
  input: "gradients/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/Mean_grad/Prod_1"
  input: "gradients/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/Mean_grad/Prod"
  input: "gradients/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Mean_grad/Cast"
  op: "Cast"
  input: "gradients/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Mean_grad/Tile"
  input: "gradients/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/AddN_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_grad/tuple/control_dependency_1"
  input: "^gradients/AddN_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  op: "PreventGradient"
  input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/Mean_grad/truediv"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/layer1/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_grad/tuple/control_dependency"
  input: "layer1/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/layer1/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_grad/tuple/control_dependency"
  input: "layer1/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/layer1/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/layer1/l2_regularizer_grad/Mul"
  input: "^gradients/layer1/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/layer1/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/layer1/l2_regularizer_grad/Mul_1"
  input: "^gradients/layer1/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/layer1/l2_regularizer_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/layer2/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "layer2/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/layer2/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_grad/tuple/control_dependency_1"
  input: "layer2/l2_regularizer/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/layer2/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/layer2/l2_regularizer_grad/Mul"
  input: "^gradients/layer2/l2_regularizer_grad/Mul_1"
}
node {
  name: "gradients/layer2/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/layer2/l2_regularizer_grad/Mul_1"
  input: "^gradients/layer2/l2_regularizer_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/layer2/l2_regularizer_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/layer2/add_grad/Shape"
  op: "Shape"
  input: "layer2/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer2/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "gradients/layer2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/layer2/add_grad/Shape"
  input: "gradients/layer2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer2/add_grad/Sum"
  op: "Sum"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "gradients/layer2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/layer2/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/layer2/add_grad/Sum"
  input: "gradients/layer2/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer2/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "gradients/layer2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/layer2/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/layer2/add_grad/Sum_1"
  input: "gradients/layer2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/layer2/add_grad/Reshape"
  input: "^gradients/layer2/add_grad/Reshape_1"
}
node {
  name: "gradients/layer2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/layer2/add_grad/Reshape"
  input: "^gradients/layer2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/layer2/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/layer2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/layer2/add_grad/Reshape_1"
  input: "^gradients/layer2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/layer2/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/layer1/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "layer1/weights/read"
  input: "gradients/layer1/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/layer2/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "layer2/weights/read"
  input: "gradients/layer2/l2_regularizer_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/layer2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/layer2/add_grad/tuple/control_dependency"
  input: "layer2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/layer2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "layer1/Relu"
  input: "gradients/layer2/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/layer2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/layer2/MatMul_grad/MatMul"
  input: "^gradients/layer2/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/layer2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/layer2/MatMul_grad/MatMul"
  input: "^gradients/layer2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/layer2/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/layer2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/layer2/MatMul_grad/MatMul_1"
  input: "^gradients/layer2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/layer2/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/layer1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/layer2/MatMul_grad/tuple/control_dependency"
  input: "layer1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/layer2/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/layer2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/layer2/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/layer1/add_grad/Shape"
  op: "Shape"
  input: "layer1/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer1/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 500
      }
    }
  }
}
node {
  name: "gradients/layer1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/layer1/add_grad/Shape"
  input: "gradients/layer1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer1/add_grad/Sum"
  op: "Sum"
  input: "gradients/layer1/Relu_grad/ReluGrad"
  input: "gradients/layer1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/layer1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/layer1/add_grad/Sum"
  input: "gradients/layer1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/layer1/Relu_grad/ReluGrad"
  input: "gradients/layer1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/layer1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/layer1/add_grad/Sum_1"
  input: "gradients/layer1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/layer1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/layer1/add_grad/Reshape"
  input: "^gradients/layer1/add_grad/Reshape_1"
}
node {
  name: "gradients/layer1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/layer1/add_grad/Reshape"
  input: "^gradients/layer1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/layer1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/layer1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/layer1/add_grad/Reshape_1"
  input: "^gradients/layer1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/layer1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/layer1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/layer1/add_grad/tuple/control_dependency"
  input: "layer1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/layer1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "x-input"
  input: "gradients/layer1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/layer1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/layer1/MatMul_grad/MatMul"
  input: "^gradients/layer1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/layer1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/layer1/MatMul_grad/MatMul_1"
  input: "^gradients/layer1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/layer1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/layer1/l2_regularizer/L2Loss_grad/mul"
  input: "gradients/layer1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/layer1/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
}
node {
  name: "GradientDescent/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "GradientDescent/update_layer1/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "layer1/weights"
  input: "GradientDescent/learning_rate"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_layer1/biases/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "layer1/biases"
  input: "GradientDescent/learning_rate"
  input: "gradients/layer1/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_layer2/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "layer2/weights"
  input: "GradientDescent/learning_rate"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_layer2/biases/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "layer2/biases"
  input: "GradientDescent/learning_rate"
  input: "gradients/layer2/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@layer2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent"
  op: "NoOp"
  input: "^GradientDescent/update_layer1/biases/ApplyGradientDescent"
  input: "^GradientDescent/update_layer1/weights/ApplyGradientDescent"
  input: "^GradientDescent/update_layer2/biases/ApplyGradientDescent"
  input: "^GradientDescent/update_layer2/weights/ApplyGradientDescent"
}
node {
  name: "train"
  op: "NoOp"
  input: "^GradientDescent"
}
library {
}
